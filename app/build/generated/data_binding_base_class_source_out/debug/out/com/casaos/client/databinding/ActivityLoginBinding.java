// Generated by view binder compiler. Do not edit!
package com.casaos.client.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ScrollView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.casaos.client.R;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.progressindicator.CircularProgressIndicator;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final MaterialButton loginButton;

  @NonNull
  public final TextInputEditText passwordInput;

  @NonNull
  public final TextInputLayout passwordLayout;

  @NonNull
  public final TextInputEditText portInput;

  @NonNull
  public final TextInputLayout portLayout;

  @NonNull
  public final CircularProgressIndicator progressIndicator;

  @NonNull
  public final TextInputEditText serverUrlInput;

  @NonNull
  public final TextInputLayout serverUrlLayout;

  @NonNull
  public final TextInputEditText usernameInput;

  @NonNull
  public final TextInputLayout usernameLayout;

  private ActivityLoginBinding(@NonNull ScrollView rootView, @NonNull MaterialButton loginButton,
      @NonNull TextInputEditText passwordInput, @NonNull TextInputLayout passwordLayout,
      @NonNull TextInputEditText portInput, @NonNull TextInputLayout portLayout,
      @NonNull CircularProgressIndicator progressIndicator,
      @NonNull TextInputEditText serverUrlInput, @NonNull TextInputLayout serverUrlLayout,
      @NonNull TextInputEditText usernameInput, @NonNull TextInputLayout usernameLayout) {
    this.rootView = rootView;
    this.loginButton = loginButton;
    this.passwordInput = passwordInput;
    this.passwordLayout = passwordLayout;
    this.portInput = portInput;
    this.portLayout = portLayout;
    this.progressIndicator = progressIndicator;
    this.serverUrlInput = serverUrlInput;
    this.serverUrlLayout = serverUrlLayout;
    this.usernameInput = usernameInput;
    this.usernameLayout = usernameLayout;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.loginButton;
      MaterialButton loginButton = ViewBindings.findChildViewById(rootView, id);
      if (loginButton == null) {
        break missingId;
      }

      id = R.id.passwordInput;
      TextInputEditText passwordInput = ViewBindings.findChildViewById(rootView, id);
      if (passwordInput == null) {
        break missingId;
      }

      id = R.id.passwordLayout;
      TextInputLayout passwordLayout = ViewBindings.findChildViewById(rootView, id);
      if (passwordLayout == null) {
        break missingId;
      }

      id = R.id.portInput;
      TextInputEditText portInput = ViewBindings.findChildViewById(rootView, id);
      if (portInput == null) {
        break missingId;
      }

      id = R.id.portLayout;
      TextInputLayout portLayout = ViewBindings.findChildViewById(rootView, id);
      if (portLayout == null) {
        break missingId;
      }

      id = R.id.progressIndicator;
      CircularProgressIndicator progressIndicator = ViewBindings.findChildViewById(rootView, id);
      if (progressIndicator == null) {
        break missingId;
      }

      id = R.id.serverUrlInput;
      TextInputEditText serverUrlInput = ViewBindings.findChildViewById(rootView, id);
      if (serverUrlInput == null) {
        break missingId;
      }

      id = R.id.serverUrlLayout;
      TextInputLayout serverUrlLayout = ViewBindings.findChildViewById(rootView, id);
      if (serverUrlLayout == null) {
        break missingId;
      }

      id = R.id.usernameInput;
      TextInputEditText usernameInput = ViewBindings.findChildViewById(rootView, id);
      if (usernameInput == null) {
        break missingId;
      }

      id = R.id.usernameLayout;
      TextInputLayout usernameLayout = ViewBindings.findChildViewById(rootView, id);
      if (usernameLayout == null) {
        break missingId;
      }

      return new ActivityLoginBinding((ScrollView) rootView, loginButton, passwordInput,
          passwordLayout, portInput, portLayout, progressIndicator, serverUrlInput, serverUrlLayout,
          usernameInput, usernameLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
